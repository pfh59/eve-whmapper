@page "/whmapper"

@using Blazor.Diagrams.Core;
@using Blazor.Diagrams.Core.Geometry;
@using Blazor.Diagrams.Core.Models;
@using Blazor.Diagrams.Components;
@using Blazor.Diagrams.Algorithms;
@using WHMapper.Models.Db.Enums;
@using Blazor.Diagrams.Components.Widgets; 



<MudPaper Class="@(_loading ? "invisible" : "visible ma-2")" Outlined="true" Square="true" Height="60vh" MinHeight="60vh">
    <MudMenu @ref="ClickRightMenu" PositionAtCursor="true" ActivationEvent="@MouseEvent.RightClick" Dense="true" @oncustompaste="HandleCustomPaste" style="height: 100%; width: 100%;" @oncontextmenu="OnMenuOpen">
        <ActivatorContent>
            @if (!FeatureFlag.DISABLE_MULTI_MAP())
            {
                <MudTabs Elevation="4" ApplyEffectsToContainer="true" @bind-ActivePanelIndex="_selectedWHMapIndex" Rounded="true" Border="true" style="height: inherit; width: inherit;" Class="pa-5">
                    <ChildContent>
                        @foreach (var item in WHMaps)
                        {
                            <div style="width: inherit; height: inherit" Class="Rounded">
                                <MudTabPanel Text="@item.Name" Tag="@item.Id">
                                    <CascadingValue Value="Diagram" IsFixed="true">
                                        <DiagramCanvas></DiagramCanvas>
                                    </CascadingValue>
                                </MudTabPanel>
                            </div>
                        }
                    </ChildContent>
                    <Header Context="tabs_context">
                        @if (_isAdmin)
                        {
                            <MudButtonGroup>
                                <MudTooltip Text="Add new map">
                                    <MudIconButton Icon="@Icons.Material.Filled.Add" OnClick="@( async () => AddNewMap() )" />
                                </MudTooltip>
                            </MudButtonGroup>
                        }
                    </Header>
                </MudTabs>
            }
            else
            {
                <div style="width: 100%; height: 100%" Class="Rounded">
                    <CascadingValue Value="Diagram">
                        <DiagramCanvas></DiagramCanvas>
                    </CascadingValue>
                </div>
            }
        </ActivatorContent>
        <ChildContent>
            @if (_selectedSystemLink == null && _selectedSystemNode == null)
            {
                <MudMenuItem OnClick="OpenSearchAndAddDialog">Add System</MudMenuItem>
            }

            @if (_selectedSystemLink != null)
            {
                <MudMenuItem OnClick="@(() => ToggleSlectedSystemLinkEOL())" Disabled="@(_selectedSystemLink == null)">Toggle EOL</MudMenuItem>
                <div class="d-flex flex-column">
                    <MudMenu ActivationEvent="@MouseEvent.MouseOver" AnchorOrigin="Origin.TopRight" FullWidth="true" Disabled="@(_selectedSystemLink == null)"
                             EndIcon="@Icons.Material.Filled.ArrowRight" Label="Status" Class="mx-2" Dense="true" ButtonClass="mud-typography mud-typography-body2 rounded-0 py-2 px-4">
                        <ChildContent>
                            <MudMenuItem OnClick="@(() => SetSelectedSystemLinkStatus(SystemLinkMassStatus.Normal))">Normal</MudMenuItem>
                            <MudMenuItem OnClick="@(() => SetSelectedSystemLinkStatus(SystemLinkMassStatus.Critical))">Critical</MudMenuItem>
                            <MudMenuItem OnClick="@(() => SetSelectedSystemLinkStatus(SystemLinkMassStatus.Verge))">Verge</MudMenuItem>
                        </ChildContent>
                    </MudMenu>

                    <MudMenu ActivationEvent="@MouseEvent.MouseOver" AnchorOrigin="Origin.TopRight" FullWidth="true" Disabled="@(_selectedSystemLink == null)"
                             EndIcon="@Icons.Material.Filled.ArrowRight" Label="Size" Class="mx-2" Dense="true" ButtonClass="mud-typography mud-typography-body2 rounded-0 py-2 px-4">
                        <ChildContent>
                            <MudMenuItem OnClick="@(() => SetSelectedSystemLinkSize(SystemLinkSize.Small))">Small</MudMenuItem>
                            <MudMenuItem OnClick="@(() => SetSelectedSystemLinkSize(SystemLinkSize.Medium))">Medium</MudMenuItem>
                            <MudMenuItem OnClick="@(() => SetSelectedSystemLinkSize(SystemLinkSize.Large))">Large</MudMenuItem>
                            <MudMenuItem OnClick="@(() => SetSelectedSystemLinkSize(SystemLinkSize.XLarge))">XLarge</MudMenuItem>
                        </ChildContent>
                    </MudMenu>
                </div>
            }
            @if (_selectedSystemNode != null)
            {
                <MudMenuItem Icon="@Icons.Material.Sharp.FlagCircle" Size="Size.Small" OnClick="@(() => SetSelectedSystemDestinationWaypoint())">Set Destination</MudMenuItem>
                <MudMenuItem Icon="@_menu_lock_icon_value" Size="Size.Small" OnClick="@(() => ToggleSystemLock())">@_menu_lock_value</MudMenuItem>
            }

        </ChildContent>
    </MudMenu>
</MudPaper>
<MudPaper Elevation="0" Class="@(_loading ? "invisible" : "visible")">
    <MudStack Row="true" Justify="Justify.FlexStart" AlignItems="AlignItems.Stretch">
        <WHMapper.Pages.Mapper.SystemInfos.Overview CurrentSystemNode="@_selectedSystemNode" />
        <WHMapper.Pages.Mapper.Signatures.Overview @ref="WHSignaturesView" CurrentMapId="@_selectedWHMap?.Id" CurrentSystemNodeId="@_selectedSystemNode?.IdWH" NotificationHub="@_hubConnection" />
    </MudStack>
</MudPaper>

<MudOverlay @bind-Visible="@(_loading)" DarkBackground="true" ZIndex="9999" AutoClose="false">
    <MudProgressCircular Color="Color.Secondary" Indeterminate="@_loading" Size="MudBlazor.Size.Large" />
</MudOverlay>