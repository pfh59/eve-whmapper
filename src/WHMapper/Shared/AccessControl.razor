@using Microsoft.AspNetCore.Components.Authorization
@using WHMapper.Services.EveOAuthProvider.Services
@using static System.Net.WebRequestMethods

<AuthorizeView>
    <Authorized>
        <AuthorizeView Policy="Admin" Context="innerContext">
           <Authorized>
                <MudMenu Dense="true" AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight">
                    <ActivatorContent>
                        <MudChip T="string" Icon="@Icons.Material.Filled.Person">@_username</MudChip>
                    </ActivatorContent>
                    <ChildContent>
                        <MudMenuItem Icon="@Icons.Material.Filled.PersonAdd" IconColor="Color.Default" Href="login?redirectUri=/" Target="_blank">Add Account</MudMenuItem>     
                        <MudMenuItem Icon="@Icons.Material.Filled.SettingsAccessibility" IconColor="Color.Default" Href="whmapperadmin" Target="_blank">Access List</MudMenuItem>
                        <MudMenuItem Icon="@Icons.Material.Filled.Map" IconColor="Color.Default" Href="whmappermapadmin" Target="_blank">Map</MudMenuItem>
                        <MudMenuItem Icon="@Icons.Material.Filled.Logout" IconColor="Color.Default" Href="logout">Logout</MudMenuItem>
                    </ChildContent>
                </MudMenu>
            </Authorized>
            <NotAuthorized>
                <MudMenu Dense="true" AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight">
                    <ActivatorContent>
                        <MudChip T="string" Icon="@Icons.Material.Filled.Person">@_username</MudChip>
                    </ActivatorContent>
                    <ChildContent>
                        <MudMenuItem Icon="@Icons.Material.Filled.PersonAdd" IconColor="Color.Default" Href="login?redirectUri=/" Target="_blank">Add Account</MudMenuItem>
                        <MudMenuItem Icon="@Icons.Material.Filled.Logout" IconColor="Color.Default" Href="logout">Logout</MudMenuItem>
                    </ChildContent>
                </MudMenu>
            </NotAuthorized>
        </AuthorizeView>

    </Authorized>
    <NotAuthorized>
       
        <button @onclick="GetOAuthToken">Get OAuth Token</button>
        <MudMenu Dense="true" AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight">
            <ActivatorContent>
                <MudChip T="string" Icon="@Icons.Material.Filled.Person">Account</MudChip>
            </ActivatorContent>
            <ChildContent>
                <MudMenuItem Icon=@Icons.Material.Filled.Login IconColor="Color.Default" Href="login?redirectUri=/">Login</MudMenuItem>
            </ChildContent>
        </MudMenu>
    </NotAuthorized>
</AuthorizeView>



@code
{
    private string _username = "Anonymous";

    [Inject]
    private IEveUserInfosServices  UserService { get; set; } = null!;

    [Inject]
    private IJSRuntime JS { get; set; } = null!;

    @inject HttpClient Http

    protected override async Task OnInitializedAsync()
    {
        _username = await UserService.GetUserName();
        StateHasChanged();
    }

    private async Task GetOAuthToken()
    {
        var request = new { Code = "your-authorization-code" };
        var response = await Http.PostAsJsonAsync("/api/oauth/token", request);
        
        if (response.IsSuccessStatusCode)
        {
            var token = await response.Content.ReadAsStringAsync();
            Console.WriteLine($"OAuth Token: {token}");
        }
        else
        {
            Console.WriteLine("Error retrieving token");
        }
    }
}
