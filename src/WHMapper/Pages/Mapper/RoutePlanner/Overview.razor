<MudPaper Class="@(CurrentSystemNode == null ? "invisible pa-2 ma-2 align-self-stretch" : "visible pa-2 ma-2")" Outlined="true" Width="300px">
    <MudStack>
        <MudStack Row="true" Justify="Justify.SpaceAround">
            <MudText Typo="Typo.subtitle1">Route Planner</MudText>
            <MudIconButton Icon="@Icons.Material.Filled.Add" Variant="Variant.Filled" Color="Color.Info" Size="Size.Small" OnClick="@((e) => AddRoute())" Disabled="@(_isEditable)"/>
            <MudIconButton Icon="@Icons.Material.Filled.Edit" Variant="Variant.Filled" Color="Color.Warning" Size="Size.Small" OnClick="@((e) => Edit())" />
        </MudStack>
        
        @if(_globalRoutes!=null && _globalRoutes.Count() > 0)
        {
        <MudDivider/>
         <MudStack>
            <MudText Typo="Typo.subtitle2" Style="font-weight:bold;">Default Routes :</MudText>
            @foreach (var route in _globalRoutes)
            {
                <MudStack Row="true" Justify="Justify.SpaceBetween">
                    <MudText Typo="Typo.body1">@route.DestinationName</MudText>
                    <AuthorizeView Policy="Admin">
                        @if(_isEditable)
                        {
                            <MudIconButton Icon="@Icons.Material.Filled.Delete" Variant="Variant.Filled" Color="Color.Error" Size="Size.Small" OnClick="@((e) => DelRoute(route))" />
                        }
                    </AuthorizeView>
                </MudStack>
            }
         </MudStack>
        }

        @if(_myRoutes!=null && _myRoutes.Count() > 0)
        {
        <MudDivider/>
         <MudStack>
            <MudText Typo="Typo.subtitle2">My Routes :</MudText>
            @foreach (var route in _myRoutes)
            {
                <MudStack Row="true" Justify="Justify.SpaceBetween">
                    @if(route.IsAvailable)
                    {
                        <MudBadge Content="route.RouteLength" Overlap="false" Color="Color.Success">
                            <MudText Typo="Typo.body2">@route.DestinationName</MudText>
                        </MudBadge>
                    }
                    else
                    {
                        <MudBadge Content="route.RouteLength" Overlap="false" Color="Color.Error">
                            <MudText Typo="Typo.body2">@route.DestinationName</MudText>
                        </MudBadge>
                    }
                    @if(_isEditable)
                    {
                        <MudIconButton Icon="@Icons.Material.Filled.Delete" Variant="Variant.Filled" Color="Color.Error" Size="Size.Small" OnClick="@((e) => DelRoute(route))"/>
                    }
                </MudStack>
            }
         </MudStack>
        }
        
    </MudStack>


</MudPaper>
