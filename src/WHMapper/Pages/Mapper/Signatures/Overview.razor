@using WHMapper.Models.DTO.EveMapper;
@using WHMapper.Models.DTO.EveMapper.Enums

<MudPaper hidden="@(CurrentSystemNodeId == null)" Outlined="true" class="d-flex">
<MudTable @ref="_signatureTable" Height="calc(100%)" Outlined="true" Items="@Signatures" Breakpoint="Breakpoint.Xs"
        Dense=true Hover=false Bordered=true Striped=true AllowUnsorted=false SortLabel="Sort By"  Virtualize="true" 
        Loading="@(Signatures==null)" LoadingProgressColor="Color.Info"
        CommitEditTooltip="Commit" ApplyButtonPosition="TableApplyButtonPosition.End" CanCancelEdit="true" IsEditRowSwitchingBlocked="false" SelectedItem="_selectedSignature"
        RowEditPreview="BackupSingature" RowEditCancel="ResetSingatureToOriginalValues" RowEditCommit="SignatiureHasBeenCommitted" 
        CancelEditIcon="@Icons.Material.Filled.Cancel" CommitEditIcon="@Icons.Material.Filled.Edit" FixedHeader="true" HorizontalScrollbar="false">
    <ColGroup>
        <col />
        <col style="width: 150px;"/>
        <col style="width: 165px;"/>
        <col style="width: 170px;"/>
        <col style="width: 150px;"/>
        <col style="width: 170px;"/>
        <col style="width: 150px;"/>
        <col />
    </ColGroup>
    <HeaderContent>
        <MudTh Style="text-align:left"><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<WHMapper.Models.Db.WHSignature, object>(x=>x.Name)">Name</MudTableSortLabel></MudTh>
        <MudTh Style="text-align:left"><MudTableSortLabel SortBy="new Func<WHMapper.Models.Db.WHSignature, object>(x=>x.Group.ToString())">Group</MudTableSortLabel></MudTh>
        <MudTh Style="text-align:left">Type</MudTh>
        <MudTh Style="text-align:center"><MudTableSortLabel SortBy="new Func<WHMapper.Models.Db.WHSignature, object>(x=>x.Created)">Created</MudTableSortLabel></MudTh>
        <MudTh Style="text-align:center">Creator</MudTh>
        <MudTh Style="text-align:center"><MudTableSortLabel SortBy="new Func<WHMapper.Models.Db.WHSignature, object>(x=>x.Updated)">Updated</MudTableSortLabel></MudTh>
        <MudTh Style="text-align:center">Updater</MudTh>
        <MudTh>
            <MudStack Row="true">
                <MudIconButton Color="Color.Surface" Icon="@Icons.Material.Filled.FileCopy" Size="Size.Small" OnClick="@((e) => OpenImportDialog())" Disabled="@(CurrentSystemNodeId ==null  || _isEditingSignature==true)" />
                <MudIconButton Color="Color.Error" Icon="@Icons.Material.Filled.Delete" Size="Size.Small" OnClick="@((e) => DeleteAllSignature())" Disabled="@(CurrentSystemNodeId ==null  || _isEditingSignature==true || Signatures==null || Signatures.Count()==0)"></MudIconButton>
            </MudStack>
        </MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id" Style="text-align:left">@context.Name</MudTd>
        <MudTd DataLabel="Group" Style="text-align:left">@context.Group</MudTd>
        @if (@context.Group == Models.Db.Enums.WHSignatureGroup.Wormhole && !String.IsNullOrEmpty(context.Type) && context.Type.Contains(" -> "))
        {
            var splitRes = @context.Type.Split(" -> ");
            var wh_type = EveMapperHelperServices.WormholeTypes.FirstOrDefault(x => string.Equals(x.Name,splitRes[0],StringComparison.OrdinalIgnoreCase));
            if(wh_type!=null && wh_type.Name!="K162")
            {
                <MudTd DataLabel="Type" Style="@($"color:{WHColorHelper?.GetSystemTypeColor(Enum.Parse<EveSystemType>(splitRes[1]))}; text-align:left")">
                    <MudTooltip Text="Arrow Right" Arrow="true" Placement="Placement.Bottom">
                        <ChildContent>
                            @context.Type
                        </ChildContent>
                        <TooltipContent>
                            <MudPaper Elevation="0">
                                <MudStack Spacing="0">
                                        <MudText Class="ml-1 mr-1 pointer-events-none" Typo="Typo.caption">Max Mass : @wh_type.MassMax.ToString("#,##0") kg</MudText>
                                        <MudText Class="ml-1 mr-1 pointer-events-none" Typo="Typo.caption">Max Jump Mass: @wh_type.JumpMassMax.ToString("#,##0") kg</MudText>
                                        <MudText Class="ml-1 mr-1 pointer-events-none" Typo="Typo.caption">Max Stable Time: @(wh_type.StableTime/60) h</MudText>
                                </MudStack>
                            </MudPaper>
                        </TooltipContent>
                    </MudTooltip>
                </MudTd>
            }
            else
            {
                 <MudTd DataLabel="Type" Style="@($"color:{WHColorHelper?.GetSystemTypeColor(Enum.Parse<EveSystemType>(splitRes[1]))}; text-align:left")">@context.Type</MudTd>
            }
        }
        else
        {
            <MudTd DataLabel="Type" Style="text-align:left">@context.Type</MudTd>
        }
        <MudTd DataLabel="Created" Style="text-align:center">@(DateDiff(_currentDateTime,context.Created))</MudTd>
        <MudTd DataLabel="Created by" HideSmall="true">@context.CreatedBy</MudTd>
        <MudTd DataLabel="Updated" Style="text-align:center">@(DateDiff(_currentDateTime,context.Updated))</MudTd>
        <MudTd DataLabel="Updated by" HideSmall="true">@context.UpdatedBy</MudTd>
        <MudTd Style="text-align:center">
            <MudIconButton Color="Color.Error" Icon="@Icons.Material.Filled.Delete" Size="Size.Small" OnClick="@((e) => DeleteSignature(@context.Id))" Disabled="@(_isEditingSignature==true)" />
        </MudTd>
    </RowTemplate>
    <RowEditingTemplate>
        <MudTd DataLabel="Id" Style="text-align:left">@context.Name</MudTd>
        <MudTd DataLabel="Group" Style="text-align:left">
            <MudSelect @bind-Value="@context.Group" Dense="true" Margin="Margin.Dense" Required="true">
                @foreach (WHMapper.Models.Db.Enums.WHSignatureGroup item in Enum.GetValues(typeof(WHMapper.Models.Db.Enums.WHSignatureGroup)))
                {
                    <MudSelectItem Value="@item" Style="text-align:left">@GetDisplayText(item)</MudSelectItem>
                }
            </MudSelect>

        </MudTd>
        <MudTd DataLabel="Type" Style="text-align:left; text-overflow: ellipsis;">
            @if (@context.Group == Models.Db.Enums.WHSignatureGroup.Wormhole)
            {
                <MudSelect @bind-Value="@context.Type" AnchorOrigin="Origin.BottomCenter" Dense="true" Margin="Margin.Dense">
                    @foreach (WormholeType wti in EveMapperHelperServices.WormholeTypes)
                    {
                        <MudSelectItem Value="@wti.ToString()" Style="@($"color:{WHColorHelper.GetSystemTypeColor(wti.Destination)}; text-align:left")">@wti.ToString()</MudSelectItem>
                    }
                </MudSelect>
            }
            else
            {
                <MudTextField @bind-Value="@context.Type" Style="text-align:left" />
            }
        </MudTd>
        <MudTd DataLabel="Created" Style="text-align:center">@(DateDiff(_currentDateTime,context.Created))</MudTd>
        <MudTd DataLabel="Created by" Style="text-align:center;text-overflow: ellipsis;">@context.CreatedBy</MudTd>
        <MudTd DataLabel="Updated" Style="text-align:center">@(DateDiff(_currentDateTime,context.Updated))</MudTd>
        <MudTd DataLabel="Updated by" Style="text-align:center;text-overflow: ellipsis;">@context.UpdatedBy</MudTd>
    </RowEditingTemplate>
</MudTable>
</MudPaper>

